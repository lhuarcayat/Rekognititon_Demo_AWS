{
 "Resources": {
  "DocumentsBucket9EC9DEB9": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "rekognition-poc-documents-442431377530-us-east-1",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "PUT",
        "POST",
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/DocumentsBucket/Resource"
   }
  },
  "UserPhotosBucket4D5DE39B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "rekognition-poc-user-photos-442431377530-us-east-1",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "POST",
        "PUT",
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "MaxAge": 3000
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 120,
       "Id": "user_photos_cleanup",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "GLACIER_IR",
         "TransitionInDays": 30
        }
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/UserPhotosBucket/Resource"
   }
  },
  "UserPhotosBucketNotificationsFFC4FB93": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "UserPhotosBucket4D5DE39B"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".jpg"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "UserValidatorF49AEC8F",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".jpeg"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "UserValidatorF49AEC8F",
         "Arn"
        ]
       }
      },
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "suffix",
           "Value": ".png"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "UserValidatorF49AEC8F",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "UserPhotosBucketAllowBucketNotificationsToRekognitionPocStackUserValidator857841D06B1F3FD3"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/UserPhotosBucket/Notifications/Resource"
   }
  },
  "UserPhotosBucketAllowBucketNotificationsToRekognitionPocStackUserValidator857841D06B1F3FD3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UserValidatorF49AEC8F",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": "442431377530",
    "SourceArn": {
     "Fn::GetAtt": [
      "UserPhotosBucket4D5DE39B",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/UserPhotosBucket/AllowBucketNotificationsToRekognitionPocStackUserValidator857841D0"
   }
  },
  "FrontendBucketEFE2E19C": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "rekognition-poc-frontend-442431377530-us-east-1",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:cr-owned:29cf9ae3",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendBucket/Resource"
   }
  },
  "FrontendBucketPolicy1DFF75D9": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "FrontendBucketEFE2E19C"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "FrontendOAIF4D25B13",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "FrontendBucketEFE2E19C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FrontendBucketEFE2E19C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "FrontendOAIF4D25B13",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "FrontendBucketEFE2E19C",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendBucket/Policy/Resource"
   }
  },
  "IndexedDocumentsTable2C59B6EB": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "document_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "face_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "person_name",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "face-id-index",
      "KeySchema": [
       {
        "AttributeName": "face_id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "person-name-index",
      "KeySchema": [
       {
        "AttributeName": "person_name",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "document_id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "rekognition-indexed-documents"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/IndexedDocumentsTable/Resource"
   }
  },
  "ComparisonResultsTable188C61C4": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "comparison_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     },
     {
      "AttributeName": "user_image_key",
      "AttributeType": "S"
     },
     {
      "AttributeName": "matched_face_id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "confidence_score",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "user-image-index",
      "KeySchema": [
       {
        "AttributeName": "user_image_key",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "timestamp",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "face-id-index",
      "KeySchema": [
       {
        "AttributeName": "matched_face_id",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "confidence_score",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "comparison_id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "TableName": "rekognition-comparison-results",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/ComparisonResultsTable/Resource"
   }
  },
  "SharedLayer27DFABF0": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "e800acf767409813cd2a675ea3bddd15f7344c74bbdbbd9a01d11d6ac16f6423.zip"
    },
    "Description": "Shared utilities with auto-compiled dependencies",
    "LayerName": "rekognition-poc-shared-layer"
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/SharedLayer/Resource",
    "aws:asset:path": "C:\\Users\\Usuario\\Desktop\\Rekognition_project\\layers\\shared",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "IndexerLambdaRole34F05CC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "rekognition:CreateCollection",
          "rekognition:DeleteFaces",
          "rekognition:DescribeCollection",
          "rekognition:DetectFaces",
          "rekognition:IndexFaces"
         ],
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": "s3:ListBucket",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "DocumentsBucket9EC9DEB9",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            {
             "Fn::GetAtt": [
              "DocumentsBucket9EC9DEB9",
              "Arn"
             ]
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem",
          "dynamodb:Scan",
          "dynamodb:UpdateItem"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "IndexedDocumentsTable2C59B6EB",
           "Arn"
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "RekognitionIndexerPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/IndexerLambdaRole/Resource"
   }
  },
  "ValidatorLambdaRoleD4191E2F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "rekognition:CompareFaces",
          "rekognition:DetectFaces",
          "rekognition:SearchFacesByImage"
         ],
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": "s3:ListBucket",
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "DocumentsBucket9EC9DEB9",
            "Arn"
           ]
          },
          {
           "Fn::GetAtt": [
            "UserPhotosBucket4D5DE39B",
            "Arn"
           ]
          }
         ]
        },
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "DocumentsBucket9EC9DEB9",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserPhotosBucket4D5DE39B",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": [
          "dynamodb:GetItem",
          "dynamodb:PutItem",
          "dynamodb:Query",
          "dynamodb:Scan"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "ComparisonResultsTable188C61C4",
            "Arn"
           ]
          },
          {
           "Fn::GetAtt": [
            "IndexedDocumentsTable2C59B6EB",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "ComparisonResultsTable188C61C4",
               "Arn"
              ]
             },
             "/index/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "IndexedDocumentsTable2C59B6EB",
               "Arn"
              ]
             },
             "/index/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "lambda:InvokeFunction",
         "Effect": "Allow",
         "Resource": "arn:aws:lambda:us-east-1:442431377530:function:rekognition-poc-document-indexer"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "RekognitionValidatorPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/ValidatorLambdaRole/Resource"
   }
  },
  "ApiLambdaRole66D0B4CD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:DeleteObject",
          "s3:GetObject",
          "s3:HeadObject",
          "s3:PutObject"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "DocumentsBucket9EC9DEB9",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "UserPhotosBucket4D5DE39B",
               "Arn"
              ]
             },
             "/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "s3:ListBucket",
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "DocumentsBucket9EC9DEB9",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "dynamodb:Query",
          "dynamodb:Scan"
         ],
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::GetAtt": [
            "ComparisonResultsTable188C61C4",
            "Arn"
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::GetAtt": [
               "ComparisonResultsTable188C61C4",
               "Arn"
              ]
             },
             "/index/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "lambda:InvokeFunction",
         "Effect": "Allow",
         "Resource": "arn:aws:lambda:us-east-1:442431377530:function:rekognition-poc-document-indexer"
        },
        {
         "Action": [
          "rekognition:CreateCollection",
          "rekognition:DescribeCollection",
          "rekognition:DetectFaces",
          "textract:AnalyzeDocument"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "ApiLambdaPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/ApiLambdaRole/Resource"
   }
  },
  "DocumentIndexer7C68C1D7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "7e2b95cebcebb895d641fb2c97f3afb02cae4518223a0998d1759954c8e64c12.zip"
    },
    "Environment": {
     "Variables": {
      "COLLECTION_ID": "document-faces-collection",
      "INDEXED_DOCUMENTS_TABLE": {
       "Ref": "IndexedDocumentsTable2C59B6EB"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      }
     }
    },
    "FunctionName": "rekognition-poc-document-indexer",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "SharedLayer27DFABF0"
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "IndexerLambdaRole34F05CC2",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "IndexerLambdaRole34F05CC2"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/DocumentIndexer/Resource",
    "aws:asset:path": "asset.7e2b95cebcebb895d641fb2c97f3afb02cae4518223a0998d1759954c8e64c12",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UserValidatorF49AEC8F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "454b6af1f660eae658f0dbfcb8926247051dd19e20f51de15d08b198fe21181a.zip"
    },
    "Environment": {
     "Variables": {
      "COLLECTION_ID": "document-faces-collection",
      "COMPARISON_RESULTS_TABLE": {
       "Ref": "ComparisonResultsTable188C61C4"
      },
      "INDEXED_DOCUMENTS_TABLE": {
       "Ref": "IndexedDocumentsTable2C59B6EB"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "USER_PHOTOS_BUCKET": {
       "Ref": "UserPhotosBucket4D5DE39B"
      },
      "DOCUMENT_INDEXER_FUNCTION": "rekognition-poc-document-indexer"
     }
    },
    "FunctionName": "rekognition-poc-user-validator",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "SharedLayer27DFABF0"
     }
    ],
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "ValidatorLambdaRoleD4191E2F",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "ValidatorLambdaRoleD4191E2F"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/UserValidator/Resource",
    "aws:asset:path": "asset.454b6af1f660eae658f0dbfcb8926247051dd19e20f51de15d08b198fe21181a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PresignedUrlsLambda4D3A70EC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "8bc3a639dfa35557e0996b0029448deb662b8ff09e2dd08dbada4b5c0f34d21c.zip"
    },
    "Environment": {
     "Variables": {
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "USER_PHOTOS_BUCKET": {
       "Ref": "UserPhotosBucket4D5DE39B"
      }
     }
    },
    "FunctionName": "rekognition-poc-presigned-urls",
    "Handler": "handler.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaRole66D0B4CD",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "ApiLambdaRole66D0B4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/PresignedUrlsLambda/Resource",
    "aws:asset:path": "asset.8bc3a639dfa35557e0996b0029448deb662b8ff09e2dd08dbada4b5c0f34d21c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DocumentIndexerApiD0843226": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "4890f0975b4cb77148934c142388b4dd3cbccf0b04306778ebe1f4d29eae77c9.zip"
    },
    "Environment": {
     "Variables": {
      "DOCUMENT_INDEXER_FUNCTION": {
       "Ref": "DocumentIndexer7C68C1D7"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "COLLECTION_ID": "document-faces-collection"
     }
    },
    "FunctionName": "rekognition-poc-document-indexer-api",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "SharedLayer27DFABF0"
     }
    ],
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaRole66D0B4CD",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "ApiLambdaRole66D0B4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/DocumentIndexerApi/Resource",
    "aws:asset:path": "asset.4890f0975b4cb77148934c142388b4dd3cbccf0b04306778ebe1f4d29eae77c9",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CheckValidationLambda112BA848": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "baadf662b7b1114c6966d26ec14ea0ac369f0e256e639e3006b414ba099f8dad.zip"
    },
    "Environment": {
     "Variables": {
      "COMPARISON_RESULTS_TABLE": {
       "Ref": "ComparisonResultsTable188C61C4"
      }
     }
    },
    "FunctionName": "rekognition-poc-check-validation",
    "Handler": "handler.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaRole66D0B4CD",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "ApiLambdaRole66D0B4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/CheckValidationLambda/Resource",
    "aws:asset:path": "asset.baadf662b7b1114c6966d26ec14ea0ac369f0e256e639e3006b414ba099f8dad",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CheckDocumentExistsLambda69AABDCF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "07a6ad1d0232ef3623be7ebe556c56bc84e00802576a4f13ef149af4972cfe42.zip"
    },
    "Environment": {
     "Variables": {
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      }
     }
    },
    "FunctionName": "rekognition-poc-check-document-exists",
    "Handler": "handler.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaRole66D0B4CD",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "ApiLambdaRole66D0B4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/CheckDocumentExistsLambda/Resource",
    "aws:asset:path": "asset.07a6ad1d0232ef3623be7ebe556c56bc84e00802576a4f13ef149af4972cfe42",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CleanupDocumentLambdaC43685DF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "4f72309455bdb81617a0d0a660ad19d935f03681d1acd56c428b5a7c22bb0fdf.zip"
    },
    "Environment": {
     "Variables": {
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      }
     }
    },
    "FunctionName": "rekognition-poc-cleanup-document",
    "Handler": "handler.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "ApiLambdaRole66D0B4CD",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "ApiLambdaRole66D0B4CD"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/CleanupDocumentLambda/Resource",
    "aws:asset:path": "asset.4f72309455bdb81617a0d0a660ad19d935f03681d1acd56c428b5a7c22bb0fdf",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "FrontendOAIF4D25B13": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "OAI for Rekognition POC Frontend"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendOAI/Resource"
   }
  },
  "FrontendDistributionE6EAF405": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Comment": "Rekognition POC Frontend Distribution",
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "TargetOriginId": "RekognitionPocStackFrontendDistributionOrigin129DD51F9",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "FrontendBucketEFE2E19C",
         "RegionalDomainName"
        ]
       },
       "Id": "RekognitionPocStackFrontendDistributionOrigin129DD51F9",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "FrontendOAIF4D25B13"
           }
          ]
         ]
        }
       }
      }
     ],
     "PriceClass": "PriceClass_100"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendDistribution/Resource"
   }
  },
  "RekognitionApiFBDE99C9": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for Rekognition POC Frontend",
    "Name": "rekognition-poc-api"
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Resource"
   }
  },
  "RekognitionApiDeployment12E716F5f13ece26fc20198ba331b91755a08d21": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for Rekognition POC Frontend",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "DependsOn": [
    "RekognitionApicheckdocumentOPTIONS76B5C186",
    "RekognitionApicheckdocumentPOSTD9A65582",
    "RekognitionApicheckdocumentEDA2D3AD",
    "RekognitionApicheckvalidationnumerodocumentoGET0C8BBD20",
    "RekognitionApicheckvalidationnumerodocumentoOPTIONS01891819",
    "RekognitionApicheckvalidationnumerodocumento77E2D4EE",
    "RekognitionApicheckvalidationOPTIONS99507CC4",
    "RekognitionApicheckvalidationBF29CB94",
    "RekognitionApicleanupdocumentOPTIONS81BFC836",
    "RekognitionApicleanupdocumentPOST46D4C0DC",
    "RekognitionApicleanupdocument845FA77A",
    "RekognitionApiindexdocumentOPTIONSD3990640",
    "RekognitionApiindexdocumentPOST20E08C68",
    "RekognitionApiindexdocumentC155D060",
    "RekognitionApiOPTIONSE9227AF8",
    "RekognitionApipresignedurlsOPTIONS5770D3B7",
    "RekognitionApipresignedurlsPOST4926CAF4",
    "RekognitionApipresignedurls98C038BA"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Deployment/Resource"
   }
  },
  "RekognitionApiDeploymentStageprodFC9D95C2": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "RekognitionApiDeployment12E716F5f13ece26fc20198ba331b91755a08d21"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/DeploymentStage.prod/Resource"
   }
  },
  "RekognitionApiOPTIONSE9227AF8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/OPTIONS/Resource"
   }
  },
  "RekognitionApipresignedurls98C038BA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "PathPart": "presigned-urls",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/presigned-urls/Resource"
   }
  },
  "RekognitionApipresignedurlsOPTIONS5770D3B7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApipresignedurls98C038BA"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/presigned-urls/OPTIONS/Resource"
   }
  },
  "RekognitionApipresignedurlsPOSTApiPermissionRekognitionPocStackRekognitionApiF810B10BPOSTpresignedurls9C7E857F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignedUrlsLambda4D3A70EC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/",
       {
        "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
       },
       "/POST/presigned-urls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/presigned-urls/POST/ApiPermission.RekognitionPocStackRekognitionApiF810B10B.POST..presigned-urls"
   }
  },
  "RekognitionApipresignedurlsPOSTApiPermissionTestRekognitionPocStackRekognitionApiF810B10BPOSTpresignedurls653EA5B7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresignedUrlsLambda4D3A70EC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/test-invoke-stage/POST/presigned-urls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/presigned-urls/POST/ApiPermission.Test.RekognitionPocStackRekognitionApiF810B10B.POST..presigned-urls"
   }
  },
  "RekognitionApipresignedurlsPOST4926CAF4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PresignedUrlsLambda4D3A70EC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RekognitionApipresignedurls98C038BA"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/presigned-urls/POST/Resource"
   }
  },
  "RekognitionApiindexdocumentC155D060": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "PathPart": "index-document",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/index-document/Resource"
   }
  },
  "RekognitionApiindexdocumentOPTIONSD3990640": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApiindexdocumentC155D060"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/index-document/OPTIONS/Resource"
   }
  },
  "RekognitionApiindexdocumentPOSTApiPermissionRekognitionPocStackRekognitionApiF810B10BPOSTindexdocumentF2510F94": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DocumentIndexerApiD0843226",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/",
       {
        "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
       },
       "/POST/index-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/index-document/POST/ApiPermission.RekognitionPocStackRekognitionApiF810B10B.POST..index-document"
   }
  },
  "RekognitionApiindexdocumentPOSTApiPermissionTestRekognitionPocStackRekognitionApiF810B10BPOSTindexdocument4AF22EB6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DocumentIndexerApiD0843226",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/test-invoke-stage/POST/index-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/index-document/POST/ApiPermission.Test.RekognitionPocStackRekognitionApiF810B10B.POST..index-document"
   }
  },
  "RekognitionApiindexdocumentPOST20E08C68": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DocumentIndexerApiD0843226",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RekognitionApiindexdocumentC155D060"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/index-document/POST/Resource"
   }
  },
  "RekognitionApicheckvalidationBF29CB94": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "PathPart": "check-validation",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/Resource"
   }
  },
  "RekognitionApicheckvalidationOPTIONS99507CC4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApicheckvalidationBF29CB94"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/OPTIONS/Resource"
   }
  },
  "RekognitionApicheckvalidationnumerodocumento77E2D4EE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "RekognitionApicheckvalidationBF29CB94"
    },
    "PathPart": "{numero_documento}",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/{numero_documento}/Resource"
   }
  },
  "RekognitionApicheckvalidationnumerodocumentoOPTIONS01891819": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApicheckvalidationnumerodocumento77E2D4EE"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/{numero_documento}/OPTIONS/Resource"
   }
  },
  "RekognitionApicheckvalidationnumerodocumentoGETApiPermissionRekognitionPocStackRekognitionApiF810B10BGETcheckvalidationnumerodocumentoC00A0539": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckValidationLambda112BA848",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/",
       {
        "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
       },
       "/GET/check-validation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/{numero_documento}/GET/ApiPermission.RekognitionPocStackRekognitionApiF810B10B.GET..check-validation.{numero_documento}"
   }
  },
  "RekognitionApicheckvalidationnumerodocumentoGETApiPermissionTestRekognitionPocStackRekognitionApiF810B10BGETcheckvalidationnumerodocumento6A309786": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckValidationLambda112BA848",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/test-invoke-stage/GET/check-validation/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/{numero_documento}/GET/ApiPermission.Test.RekognitionPocStackRekognitionApiF810B10B.GET..check-validation.{numero_documento}"
   }
  },
  "RekognitionApicheckvalidationnumerodocumentoGET0C8BBD20": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CheckValidationLambda112BA848",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RekognitionApicheckvalidationnumerodocumento77E2D4EE"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-validation/{numero_documento}/GET/Resource"
   }
  },
  "RekognitionApicheckdocumentEDA2D3AD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "PathPart": "check-document",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-document/Resource"
   }
  },
  "RekognitionApicheckdocumentOPTIONS76B5C186": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApicheckdocumentEDA2D3AD"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-document/OPTIONS/Resource"
   }
  },
  "RekognitionApicheckdocumentPOSTApiPermissionRekognitionPocStackRekognitionApiF810B10BPOSTcheckdocument1839CE1A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckDocumentExistsLambda69AABDCF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/",
       {
        "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
       },
       "/POST/check-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-document/POST/ApiPermission.RekognitionPocStackRekognitionApiF810B10B.POST..check-document"
   }
  },
  "RekognitionApicheckdocumentPOSTApiPermissionTestRekognitionPocStackRekognitionApiF810B10BPOSTcheckdocument607781BC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckDocumentExistsLambda69AABDCF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/test-invoke-stage/POST/check-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-document/POST/ApiPermission.Test.RekognitionPocStackRekognitionApiF810B10B.POST..check-document"
   }
  },
  "RekognitionApicheckdocumentPOSTD9A65582": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CheckDocumentExistsLambda69AABDCF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RekognitionApicheckdocumentEDA2D3AD"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/check-document/POST/Resource"
   }
  },
  "RekognitionApicleanupdocument845FA77A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "RekognitionApiFBDE99C9",
      "RootResourceId"
     ]
    },
    "PathPart": "cleanup-document",
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/cleanup-document/Resource"
   }
  },
  "RekognitionApicleanupdocumentOPTIONS81BFC836": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "RekognitionApicleanupdocument845FA77A"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/cleanup-document/OPTIONS/Resource"
   }
  },
  "RekognitionApicleanupdocumentPOSTApiPermissionRekognitionPocStackRekognitionApiF810B10BPOSTcleanupdocumentCF27CED0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CleanupDocumentLambdaC43685DF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/",
       {
        "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
       },
       "/POST/cleanup-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/cleanup-document/POST/ApiPermission.RekognitionPocStackRekognitionApiF810B10B.POST..cleanup-document"
   }
  },
  "RekognitionApicleanupdocumentPOSTApiPermissionTestRekognitionPocStackRekognitionApiF810B10BPOSTcleanupdocument7068EF07": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CleanupDocumentLambdaC43685DF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:442431377530:",
       {
        "Ref": "RekognitionApiFBDE99C9"
       },
       "/test-invoke-stage/POST/cleanup-document"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/cleanup-document/POST/ApiPermission.Test.RekognitionPocStackRekognitionApiF810B10B.POST..cleanup-document"
   }
  },
  "RekognitionApicleanupdocumentPOST46D4C0DC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CleanupDocumentLambdaC43685DF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "RekognitionApicleanupdocument845FA77A"
    },
    "RestApiId": {
     "Ref": "RekognitionApiFBDE99C9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/RekognitionApi/Default/cleanup-document/POST/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def with_id(n):\n    n['Id'] = f\"{stack_id}-{hash(json.dumps(n, sort_keys=True))}\"\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        ids = [with_id(n) for n in old.get(t, [])]\n        old_incoming_ids = [n['Id'] for n in ids]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'] in old_incoming_ids]\n    elif request_type == 'Delete':\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "FrontendDeploymentAwsCliLayer77737BA0": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "1b2c92f2cd21c170884393633bd4c732676df6290562199b6e3ca5e2a1be7d18.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.1b2c92f2cd21c170884393633bd4c732676df6290562199b6e3ca5e2a1be7d18.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "FrontendDeploymentCustomResource068A52DB": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-442431377530-us-east-1"
    ],
    "SourceObjectKeys": [
     "c70123fcdadce2005bad9a5b427beb1c3bb02f4f34ca7f7b776092910187a256.zip"
    ],
    "DestinationBucketName": {
     "Ref": "FrontendBucketEFE2E19C"
    },
    "RetainOnDelete": false,
    "Prune": true,
    "DistributionId": {
     "Ref": "FrontendDistributionE6EAF405"
    },
    "DistributionPaths": [
     "/*"
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/FrontendDeployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-442431377530-us-east-1",
        "arn:aws:s3:::cdk-hnb659fds-assets-442431377530-us-east-1/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "FrontendBucketEFE2E19C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "FrontendBucketEFE2E19C",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-442431377530-us-east-1",
     "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "FrontendDeploymentAwsCliLayer77737BA0"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RXWvDMAz8LXt3vX7sD7QphcFGSzv2WhxHTbU6dohkQjD578NO2nSwJ91J5+NkLeXibS7nL6qlmS5uM4O5DCdW+iZUS+dAKxk2Xt+ARXaxIxrKwRnU3dQe+UA2iqAXRlV5oWTILvYATYVE6Kz4UB0039Akkl3sH77zVvM4eOAT2tIAu0enF0VnVeWKXIYvlRuI8gR6QatzUETAJNexiAJq47oKLMsh3PbR6AWqSoajGxxSnfYaUC+0cb64NM6yDPsGS7RrrYHovQDLyEmbRc0uav5VbJG4wdzfV3vmvVA1loqhVZ0MRyBe15jijHDKm55O7MSqTMEHcARyvtEQP198Al9dEYcjuk9H54T7/plNkvRx0RRtGRV7z7Xn8Z5nEw92Vi1pg3LdUmYw3VBknthVD3Nx6Pjq7OtKLpZysXj5IcRZ4y1jBfI41F8bZnSGgQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "RekognitionPocStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "RekognitionApiEndpoint0AC9B664": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RekognitionApiFBDE99C9"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
      },
      "/"
     ]
    ]
   }
  },
  "DocumentsBucketName": {
   "Description": "Bucket for identity documents",
   "Value": {
    "Ref": "DocumentsBucket9EC9DEB9"
   }
  },
  "UserPhotosBucketName": {
   "Description": "Bucket for user photos",
   "Value": {
    "Ref": "UserPhotosBucket4D5DE39B"
   }
  },
  "FrontendBucketName": {
   "Description": "Bucket for frontend hosting",
   "Value": {
    "Ref": "FrontendBucketEFE2E19C"
   }
  },
  "FrontendUrl": {
   "Description": "Frontend website URL (HTTPS via CloudFront)",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "FrontendDistributionE6EAF405",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "CloudFrontDistributionId": {
   "Description": "CloudFront distribution ID",
   "Value": {
    "Ref": "FrontendDistributionE6EAF405"
   }
  },
  "ApiGatewayUrl": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "RekognitionApiFBDE99C9"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "RekognitionApiDeploymentStageprodFC9D95C2"
      },
      "/"
     ]
    ]
   }
  },
  "IndexedDocumentsTableName": {
   "Description": "DynamoDB table for indexed documents metadata",
   "Value": {
    "Ref": "IndexedDocumentsTable2C59B6EB"
   }
  },
  "ComparisonResultsTableName": {
   "Description": "DynamoDB table for comparison results",
   "Value": {
    "Ref": "ComparisonResultsTable188C61C4"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}